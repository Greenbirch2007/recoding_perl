perl程序声明与语句组成，程序自上而下，包含了循环，条件控制，每个越剧
以分号；结束


交互式编程

脚本式编程

perl -e 'print "Hello World\n"'



/usr/bin/perl  chmod 0755 

文件名可以包含数字，符号和字母，但不能有空格

注释

@

POD注释

空白可以随意，如果空白和分行出现字符串内，也会同样输出
所有类型的空白如，空格,tab等如果在引号外
解释器会忽略，但是如果在引号内会原样输出

单引号和双印
双引号\n会输出换行，而但银行没有
双引号可以正常解析一些转义字符串与变量
而单引号无法解析原样输出

here文档

１．必须后接分号，否则编译通不过
2. END可以用任意其他字符代替，只需要保证结束表示与开始标识一直
3. 结束标识必须顶格肚子占一行(即必须从行开始，
前后不能衔接任何空白和字符)
４．　开始标识可以不带引号或栓引号，
不带引号与带双引号效果意志，解释内嵌的变量和转义符号，带
单引号则不能解释内嵌的变量和转义符号
５．　当内容需要内嵌引号(单引号或双引号)时，
不需要加转义符，本身堆单引号转义，

转义字符

需要输出一个特殊的字符可以使用反斜杠(\)来转义，例如输出
美元符号($)

perl标识符就是用户编程时使用的名字，在程序中
使用的变量，含量名，函数名语句块名统称标识符
标识符转换组成，英文字母，数字，和下划线
标识符开呕吐必须是因为或下划线
标识符区分大小写


(1) 双中有双，单中有单都需要\转义
(2) 双中有但或单中有双均不需要转义
(3) 单引号直接了当，引号内是什么就显示什么，
双引号则需要考虑转义或变量替换等


perl是弱类型语言，不需要指定类型
解释器会根据上下文自动选择匹配冷
有三个基本数据类型
标量，数组，哈希


标量
$myf = 1323;
$as ="asd";


数组
数组变量以字符@开头，索引从0开始，
@arr = (1,2,3)

哈希
哈希是一个无序的k/v对结合
可以使用间作为下标获取值
哈希变量以字符%开头


%h = ('a'=>1,'b'=>2)

数字字面量


１．整型
２．浮点数
浮点寄存器通常不嗯给你精确存贮浮点数，会有误差


３．字符串

perl中的字符串使用一个标量来表示，定义方式和c很像
在perl里面字符串不是用\0来结束的
perl双引号可以额正常解析一些转义字符与变量，
而单引号无法解析会原样输出
但是用单引号可以定义使用多行文本

换行\n位于双引号内，有效
换行\n位于单引号内，无效


\u 只有R会转为大写
\U 所有的字母的都会转换为大写


指定部分会转换为大写
将到\E位置的费单词(non-word)字符加上反斜线


perl变量是存户在内存中的数，创建一个变量即会在内存上开辟一个空间
解释器会根据变量的类型来军队起存储肚饿空间
可以为变量分配不同的数据类型，如整型，浮点型，字符串你等

三种基本类型：标量，数组，哈希

$a
@a
%a


perl为每个变量类型设置了独立的命令空间

创建变量

变量不需要显示声明类型，在变量复制后，
解释器会自动分配匹配的类型空间
变量使用= 赋值
可以在程序中使用use strict语句来让所有变量需要
强制声明类型

$age = 25;
$name = "ruub";
$salary = 144.3;


标量变量
标量是一个单一的数据但议案
数据可以是证书，浮点数，字符，字符串，段落等


数组变量

数组是用于存储一个有序的标量值得变量
数组@开始
要访问数组的变量，可以使用$+变量名，并指定下标来访问

程序中在$标记前使用转义字符\,才能输出字符$

哈希变量

哈希是一个k/v对的集合

要访问哈希值，使用$+{key}的方式６６６６６６６６６６６６６６６６６６６６６６６


变量上下文

所谓上下文，就是表达式所在的位置
上下文是由等号左边的变量类型决定的，


数组返回所有元素
标量返回元素的个数

变量－
赋值给一个标量变量，在标量上下文的右侧计算
列表－


标量是一个简单的数据单元

标量可以是一个证书，浮点数，字符，字符串，段落或一个
完整的网页
数字标量
字符串标量
注意单引号和双引号的趋避６６６

标量运算
字符串连接和字符串与数字连接用.

使用多行字符串
单引号


特殊字符

__FILE__
__LINE__
__PACKAGE__

分别表示当前执行脚本的
文件名，行号，包名
不能卸载字符串中


v字符换
一个以v开头，后面跟着
一个或多个用句点分隔的整数，
会被当做一个淄川文本


perl数组是一个存储标量值的列表变量，变量可以是不同类型
数组变量以@开头，访问数组元素使用
$+变量名称＋[索引值]

创建数组

数组变量以@开始，元素放在括号内，
也可以以qw定义数组

@array =(1,2,'asd');
@array = wq

使用qw//运算符，它返回字符串列表，数组元素以空格分隔

也可以按索引来给数组赋值


访问数组元素
用空格来分隔

数组序列号

perl提供了可以按序列输出的数组形式
起始值+..+结束之

数组大小

数组大小由数组中的标量上下文决定


数组长度返回的是数组物理大小，而不是元素的格式


添加和删除数组元素
push @ARRAY,LIST　 将列表的值放到数组的末尾

pop @ARRAY　删除数组的最后一个值
shift @ARRAY　弹出数组第一个值，并返回它。数组的索引值也依次减一
unshift @ARRAY,LIST　将列表放在数组前面，并返回新数组的元素格式

尾部增加和减少元素
push ----pop

头部增加和减少
unshift----shift


切割数组
可以切割一个数组，斌返回切割后的数组

数组索引需要指定游侠偶的索引值，可以是正数或负数
每个索引值使用逗号隔开


如果是连续的索引，可以使用..来指定范围

替换数组元素

perl中数组元素替换使用splice()函数

splice @ARRAY, OFFSET [,LENGTH [,LIST]]

@ARRAY:要替换的数组
OFFSET:起始位置
LENGTH:替换元素个数
LIST 替换元素列表

将字符串转换为数组

perl中将字符串转换为数组使用

字符串-->@a  split()


split[ PATTERN [, EXPR [, LIMIT]]]

PATTERN: 分隔符，默认为空格
EXPR: 指定字符串数
LIMIT: 如果指定该参数，则返回该数组的个数

@a--->字符串join()

join EXPR,LIST

EXPR:连接符
LIST:列表或数组


数组排序

perl中数组排序使用sort

sort [SUBROUTINE] LIST


SUBROUTLINE:指定规则
LIST: 列表或数组

注意：数组排序是根据ASCII数字值来排序。
所以在堆数组进行排序时最好将每个元素转啊混为小写后再排序

特殊变量：$[

特殊变量$[表示数组的第一个索引值，一般为0

人为干预改变默认从０开始索引

一般情况bujiansyi 


合并数组

数组的元素是以逗号来分割，也可以还是用逗号合并数组

也可以在数组中嵌入多个数组，

从列表中选择元素

一个列表可以当作一个数组使用，在诶包指定索引值
可以读取指定的元素

perl哈希

哈希是k/v对的集合
perl中哈希变量以%标记开始

访问哈希元素格式：${key}


创建哈希

创建哈希可以通过两种方式：

1.为每个key设置value

$data['a'] = 1;

2.通过列表设置

列表第一个而元素为key,第二个为value


也可以使用=>来设置k/v

访问哈希元素

${key}


读取哈希值

可以想数组一样从哈希中提取值

还行提取之　@{key,}


哈希%－－－>数组@
@{key,key}


读取哈希的key和value


读取所有的key

可以使用keys函数读取哈希所有的键，
keys $HASH


这个函数返回所有哈希的所有key的数组

values %HASH
返回所有哈希的所有value的数组


检测元素是否存在

如果你在哈希中读取不存在的k/v堆，会返回undefined值，
且咋执行时会有警告信息

为了避免这种情况，可以使用exists函数
来判断key是否存在


获取哈希大小

哈希大小为元素的个数，可以通过先获取key
或value的所有元素数组，
再计算数组元素多少来获取哈希的代销

%-----@-----$


哈希中添加或删除元素
添加key/value对可以通过简单的赋值来完成
但是删除哈希元素要用delete






