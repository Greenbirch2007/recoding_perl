
CGI

就是所谓的“Common Gateway Interface”，动态网站程序的设计界面。

标量变量 Scalar $

\a：会发出哔的警铃声
\d：代表一个数字的字符
\D：代表一个非数字的字符
\e：跳脱符号 (escape)
\f：换页
\n：换行
\s：一个空白字符 (包括空行，换页，跳格键也都属于空白字符)
\S：非空白字符
\t：跳格字符 (Tab)
\w：一个字母，包括了a-z，A-Z，底线跟数字
\W：非字母


3. 列表与数组

$#array是数组中最后一个索引值
所以我们可以利用($#array + 1)得到目前数组中的元素个数(注二)。不过如果你打算利用这个索引值来确定目前数组的长度，并且加入新的元素，就像这样：

push,pop  最后元素，加，减

shift,unshift 最前面元素，减，加
切片



数组还是标量？
利用列表赋值给数组
在标量语境中记性
先以标量语境进行运算，然后以列表方式给数组

my @array = (1...10);   # 利用列表赋值给数组
my $scalar = @array + 4;   # 在标量语境中进行
my @scalar_array = @array + 4;  
# 先以标量语境进行运算，然后以列表方式赋值给数组

3.7 一些常用的数组运算
@_
sort($a,$b,<=>,cmp)
join,split
map,grep

排序前的数组4 6 9 61 3 64
b的数组4 6 9 61 3 64
排序后的数组3 4 6 9 61 64
排序后的b 4 6 9 61 3 64

所以perl里面的数组也是值类型，跟golang一样。但切片?
切片好像也是值类型

整数排序
其中$a跟$b是Perl的默认变量，在排序时被拿来作为两两取出的两个数字。而<=>则是表示数字的比较，如果数组中的元素是字符串，则必须以cmp来进行排序。
我们可以用接下来的例子来说明怎么样进行更复杂的排序工作。
sort {$a <=>$b} 低到高
sort {$b <=>$a}  高到低
字符串排序
cmp

sort 
sort {$a <=>$b} 低到高
sort {$b <=>$a}  高到低
@array = sort { $a cmp $b} @array;
@array = sort { $b cmp $a} @array;


my @array = qw/-4 45 -33 8 75 21 -15 38 -69 46/;
@array = sort { ($a**2) <=> ($b**2) } @array;   # 这次我们以平方进行排序
所以得到的结果会是：
-4 8 -15 21 -33 38 45 46 -69 75

join 列表中元素拼接为一个字符串

split 一个字符串分割，并放入数组

print join',',qw /s s s /;
print split',',"it's , saf";

3. map 将数组表里面的元素意义提出，运算，然后等到一个列表，放入数组
类似于python的lambda

my @array = map { sqrt($_)*10 } qw/45 33 8 75 21 15 38 69 46/;
print  "@array \n";

4.grep  可以把列表中匹配的元素留下来

my @array  =qw / 1 6 -2 5 1 -8 /;

my @grep_n = grep {$_>0} @array;

print "$_\n" for @grep_n;
$_ .= "\n" for @a;
map $_."\n", @a;

my map_ar = map s_*10,  @sites;

一、 将数字列表转换为相应的字符列表

my @chars = map(chr,@numbers);
二、 对数字列表中的每个元素计算平方，返回平方值的列表

my @quares = map {$_ * $_ } @numbers;
三、返回满足条件的数字的列表

my @numbers = map { $_ > 5 ? $_ : ()} @numbers;
注意
在BLOCK中$_ 是列表元素的别名，因为可以修改原列表的中元素的值。
如果列表中的元素不是变量，而在BLOCK中修改了$_的值，将会产生不可预料的结果。


4. 基本的控制结构
